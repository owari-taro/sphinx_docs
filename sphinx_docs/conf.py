# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('../src'))
#sys.path.insert(0, os.path.abspath('../src/submodule'))


# -- Project information -----------------------------------------------------

project = "sphinx_docs"
copyright = "2022, owari_taro"
author = "owari_taro"


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # docstringからドキュメント生成
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinxcontrib.oembed",
    "sphinxcontrib.drawio",
    'sphinx_click',
    ##github pagesに表示するのに必要！「
    'sphinx.ext.mathjax', 
    'sphinx.ext.todo', 
    'sphinx.ext.githubpages'
]


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "jp"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.

html_theme = "cloud"

#html_theme = 'alabaster'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# conf.py
html_js_files = ["js/custom.js"]

numfig = True



from docutils.parsers.rst.directives.admonitions import BaseAdmonition
from docutils import nodes


class NamedNoteDirective(BaseAdmonition):
    node_class = nodes.admonition
    css_class = 'note'
    #required_arguments = 1
    required_arguments = 0
    optional_arguments = 1

    def run(self):
        title = u''
        if self.arguments:
            title += self.arguments[0]

        if 'class' in self.options:
            self.options['class'].append(self.css_class)
        else:
            self.options['class'] = [self.css_class]


        node = self.node_class('\n'.join(self.content))
        node += nodes.title(title, title)
        node['classes'] += self.options['class']
        node['name'] = self.name
        self.state.nested_parse(self.content, self.content_offset, node)

        return [node]


class ColumnDirective(NamedNoteDirective):
    css_class = 'column'
class StrikeDirective(NamedNoteDirective):
    css_class='strike'


def setup(app):
    app.add_stylesheet('custom.css')
    app.add_directive('column', ColumnDirective)
    app.add_directive("strike",StrikeDirective)