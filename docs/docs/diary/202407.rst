=====================
2024/07
=====================

-------------------
7/24
-------------------
django
=========================
(ninja)openapiのversion変更方法
--------------------------------
* openversionはコードを直接書きかえればいい。(`issue <https://github.com/vitalik/django-ninja/pull/923>`__　の変更ファイルを確認するとわかる。fastapiのように公開インターフェースから書き換える方法はなく直接コードを書き換える必要がある)  
* defaultでopenapi versionが3.1.0になっている。



::
    
      #ninja/openapi/schema.py
      extra_info = api.openapi_extra.get("info", {})
        super().__init__(
            [
                #("openapi", "3.0.2"),
                ("openapi", "3.1.0"),
                (
                    "info",
                    {

clientからのuploadfileをserverのlocalfolderに保存する
-----------------------------------------------------------

*  FileSystemStorageを使う
* `stack-overflow <https://stackoverflow.com/questions/26274021/simply-save-file-to-folder-in-django>`__

::
    
    from django.shortcuts import render
    from django.conf import settings
    from django.core.files.storage import FileSystemStorage
    
    def upload(request):
        folder='my_folder/' 
        if request.method == 'POST' and request.FILES['myfile']:
            myfile = request.FILES['myfile']
            fs = FileSystemStorage(location=folder) #defaults to   MEDIA_ROOT  
            filename = fs.save(myfile.name, myfile)
            file_url = fs.url(filename)
            return render(request, 'upload.html', {
                'file_url': file_url
            })
        else:
             return render(request, 'upload.html')

特定のカラムが特定の値のときだけユニーク制約をかける
-------------------------------------------------------------
https://stackoverflow.com/questions/32124186/django-uniqueness-constraint-when-a-specific-field-is-true

--------------------------
7/25
--------------------------
RabbitMQ
========================
docker compose downするとqueueが消えてしまう
-------------------------------------------------------
hostnameをしていしてやれば解決する `github issue参考 <https://github.com/docker-library/rabbitmq/issues/392>`__

-------------------------
7/26
-------------------------
celery
====================================

実行時にはqueue名を指定する
-------------------------------------
名前していしてないとdefaultのqueue以外は実行されない

::
        # celeryの実行
        celery -A config worker --loglevel=INFO -Q sample


(django)__init__.pyにimortを記載する
-----------------------------------------------
* 公式ドキュメント <https://docs.celeryq.dev/en/stable/django/first-steps-with-django.html>`__ 記載のようにconfig/__init__.pyに記載する
* この記載をしておかないとdelayで非同期実行したときに **PLAIN login refused: user 'guest' - invalid credentials** とでて実行できない
 (エラーメッセージだけだとよくわからないかったので時間がかかった・・・)

::

    # This will make sure the app is always imported when
    # Django starts so that shared_task will use this app.
    from .celery import app as celery_app
    
    __all__ = ('celery_app',)
    
    N    
